/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.praxis.maki.model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ComprobanteEntry extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ComprobanteEntry\",\"namespace\":\"com.praxis.maki.model\",\"fields\":[{\"name\":\"moneda\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"MXN\\\"'\"},{\"name\":\"subTotal\",\"type\":\"double\",\"doc\":\"Type inferred from '1227.6'\"},{\"name\":\"condicionesDePago\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"Contado\\\"'\"},{\"name\":\"total\",\"type\":\"double\",\"doc\":\"Type inferred from '1424.02'\"},{\"name\":\"lugarExpedicion\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"Azcapotzalco, D.F.\\\"'\"},{\"name\":\"complemento\",\"type\":{\"type\":\"record\",\"name\":\"Comprobante.avsc\",\"namespace\":\"complemento\",\"fields\":[{\"name\":\"timbreFiscalDigital\",\"type\":{\"type\":\"record\",\"name\":\"Comprobante.avsc\",\"namespace\":\"timbreFiscalDigital.complemento\",\"fields\":[{\"name\":\"FechaTimbrado\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"2016-07-04T10:08:28\\\"'\"},{\"name\":\"noCertificadoSAT\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"00001000000301100488\\\"'\"},{\"name\":\"UUID\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"E033B66E-34D5-4A81-835D-75562160AF38\\\"'\"},{\"name\":\"version\",\"type\":\"int\",\"doc\":\"Type inferred from '1'\"}]},\"doc\":\"Type inferred from '{\\\"FechaTimbrado\\\":\\\"2016-07-04T10:08:28\\\",\\\"noCertificadoSAT\\\":\\\"00001000000301100488\\\",\\\"UUID\\\":\\\"E033B66E-34D5-4A81-835D-75562160AF38\\\",\\\"version\\\":1}'\"}]},\"doc\":\"Type inferred from '{\\\"timbreFiscalDigital\\\":{\\\"FechaTimbrado\\\":\\\"2016-07-04T10:08:28\\\",\\\"noCertificadoSAT\\\":\\\"00001000000301100488\\\",\\\"UUID\\\":\\\"E033B66E-34D5-4A81-835D-75562160AF38\\\",\\\"version\\\":1}}'\"},{\"name\":\"metodoDePago\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"No identificado\\\"'\"},{\"name\":\"descuento\",\"type\":\"int\",\"doc\":\"Type inferred from '0'\"},{\"name\":\"tipoDeComprobante\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"ingreso\\\"'\"},{\"name\":\"noCertificado\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"00001000000305104410\\\"'\"},{\"name\":\"version\",\"type\":\"double\",\"doc\":\"Type inferred from '3.2'\"},{\"name\":\"tipoCambio\",\"type\":\"int\",\"doc\":\"Type inferred from '1'\"},{\"name\":\"fecha\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"2016-07-04T10:05:41\\\"'\"},{\"name\":\"receptor\",\"type\":{\"type\":\"record\",\"name\":\"Comprobante.avsc\",\"namespace\":\"receptor\",\"fields\":[{\"name\":\"domicilio\",\"type\":{\"type\":\"record\",\"name\":\"Comprobante.avsc\",\"namespace\":\"domicilio.receptor\",\"fields\":[{\"name\":\"noExterior\",\"type\":\"int\",\"doc\":\"Type inferred from '139'\"},{\"name\":\"codigoPostal\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"02760\\\"'\"},{\"name\":\"municipio\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"Azcapotzalco\\\"'\"},{\"name\":\"calle\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"SANTO DOMINGO\\\"'\"},{\"name\":\"pais\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"Mexico\\\"'\"}]},\"doc\":\"Type inferred from '{\\\"noExterior\\\":139,\\\"codigoPostal\\\":\\\"02760\\\",\\\"municipio\\\":\\\"Azcapotzalco\\\",\\\"calle\\\":\\\"SANTO DOMINGO\\\",\\\"pais\\\":\\\"Mexico\\\"}'\"},{\"name\":\"nombre\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"ANUNCIOS PREMIUM ESPECTACULARES S.A.DE C.V\\\"'\"},{\"name\":\"rfc\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"APE130206F89\\\"'\"}]},\"doc\":\"Type inferred from '{\\\"domicilio\\\":{\\\"noExterior\\\":139,\\\"codigoPostal\\\":\\\"02760\\\",\\\"municipio\\\":\\\"Azcapotzalco\\\",\\\"calle\\\":\\\"SANTO DOMINGO\\\",\\\"pais\\\":\\\"Mexico\\\"},\\\"nombre\\\":\\\"ANUNCIOS PREMIUM ESPECTACULARES S.A.DE C.V\\\",\\\"rfc\\\":\\\"APE130206F89\\\"}'\"},{\"name\":\"conceptos\",\"type\":{\"type\":\"record\",\"name\":\"Comprobante.avsc\",\"namespace\":\"conceptos\",\"fields\":[{\"name\":\"concepto\",\"type\":{\"type\":\"record\",\"name\":\"Comprobante.avsc\",\"namespace\":\"concepto.conceptos\",\"fields\":[{\"name\":\"descripcion\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"TREINTA KILOS DE SOLDADURA 7018 1/8\\\"'\"},{\"name\":\"unidad\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"SOLDADURA\\\"'\"},{\"name\":\"cantidad\",\"type\":\"int\",\"doc\":\"Type inferred from '30'\"},{\"name\":\"complementoConcepto\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"\\\"'\"},{\"name\":\"importe\",\"type\":\"double\",\"doc\":\"Type inferred from '1227.6'\"},{\"name\":\"valorUnitario\",\"type\":\"double\",\"doc\":\"Type inferred from '40.92'\"}]},\"doc\":\"Type inferred from '{\\\"descripcion\\\":\\\"TREINTA KILOS DE SOLDADURA 7018 1/8\\\",\\\"unidad\\\":\\\"SOLDADURA\\\",\\\"cantidad\\\":30,\\\"complementoConcepto\\\":\\\"\\\",\\\"importe\\\":1227.6,\\\"valorUnitario\\\":40.92}'\"}]},\"doc\":\"Type inferred from '{\\\"concepto\\\":{\\\"descripcion\\\":\\\"TREINTA KILOS DE SOLDADURA 7018 1/8\\\",\\\"unidad\\\":\\\"SOLDADURA\\\",\\\"cantidad\\\":30,\\\"complementoConcepto\\\":\\\"\\\",\\\"importe\\\":1227.6,\\\"valorUnitario\\\":40.92}}'\"},{\"name\":\"impuestos\",\"type\":{\"type\":\"record\",\"name\":\"Comprobante.avsc\",\"namespace\":\"impuestos\",\"fields\":[{\"name\":\"traslados\",\"type\":{\"type\":\"record\",\"name\":\"Comprobante.avsc\",\"namespace\":\"traslados.impuestos\",\"fields\":[{\"name\":\"traslado\",\"type\":{\"type\":\"record\",\"name\":\"Comprobante.avsc\",\"namespace\":\"traslado.traslados.impuestos\",\"fields\":[{\"name\":\"impuesto\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"IVA\\\"'\"},{\"name\":\"tasa\",\"type\":\"int\",\"doc\":\"Type inferred from '16'\"},{\"name\":\"importe\",\"type\":\"double\",\"doc\":\"Type inferred from '196.42'\"}]},\"doc\":\"Type inferred from '{\\\"impuesto\\\":\\\"IVA\\\",\\\"tasa\\\":16,\\\"importe\\\":196.42}'\"}]},\"doc\":\"Type inferred from '{\\\"traslado\\\":{\\\"impuesto\\\":\\\"IVA\\\",\\\"tasa\\\":16,\\\"importe\\\":196.42}}'\"},{\"name\":\"totalImpuestosTrasladados\",\"type\":\"double\",\"doc\":\"Type inferred from '196.42'\"}]},\"doc\":\"Type inferred from '{\\\"traslados\\\":{\\\"traslado\\\":{\\\"impuesto\\\":\\\"IVA\\\",\\\"tasa\\\":16,\\\"importe\\\":196.42}},\\\"totalImpuestosTrasladados\\\":196.42}'\"},{\"name\":\"serie\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"F\\\"'\"},{\"name\":\"folio\",\"type\":\"int\",\"doc\":\"Type inferred from '392'\"},{\"name\":\"formaDePago\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"Pago en una sola exhibición\\\"'\"},{\"name\":\"emisor\",\"type\":{\"type\":\"record\",\"name\":\"Comprobante.avsc\",\"namespace\":\"emisor\",\"fields\":[{\"name\":\"expedidoEn\",\"type\":{\"type\":\"record\",\"name\":\"Comprobante.avsc\",\"namespace\":\"expedidoEn.emisor\",\"fields\":[{\"name\":\"noExterior\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"6 BIS\\\"'\"},{\"name\":\"estado\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"D.F.\\\"'\"},{\"name\":\"codigoPostal\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"02140\\\"'\"},{\"name\":\"municipio\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"Azcapotzalco\\\"'\"},{\"name\":\"calle\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"AURORA\\\"'\"},{\"name\":\"colonia\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"Santa Ines\\\"'\"},{\"name\":\"pais\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"Mexico\\\"'\"}]},\"doc\":\"Type inferred from '{\\\"noExterior\\\":\\\"6 BIS\\\",\\\"estado\\\":\\\"D.F.\\\",\\\"codigoPostal\\\":\\\"02140\\\",\\\"municipio\\\":\\\"Azcapotzalco\\\",\\\"calle\\\":\\\"AURORA\\\",\\\"colonia\\\":\\\"Santa Ines\\\",\\\"pais\\\":\\\"Mexico\\\"}'\"},{\"name\":\"regimenFiscal\",\"type\":{\"type\":\"record\",\"name\":\"Comprobante.avsc\",\"namespace\":\"regimenFiscal.emisor\",\"fields\":[{\"name\":\"Regimen\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"Regímen de Incorporación Fiscal\\\"'\"}]},\"doc\":\"Type inferred from '{\\\"Regimen\\\":\\\"Regímen de Incorporación Fiscal\\\"}'\"},{\"name\":\"domicilioFiscal\",\"type\":{\"type\":\"record\",\"name\":\"Comprobante.avsc\",\"namespace\":\"domicilioFiscal.emisor\",\"fields\":[{\"name\":\"noExterior\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"6 BIS\\\"'\"},{\"name\":\"estado\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"D.F.\\\"'\"},{\"name\":\"codigoPostal\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"02140\\\"'\"},{\"name\":\"municipio\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"Azcapotzalco\\\"'\"},{\"name\":\"calle\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"AURORA\\\"'\"},{\"name\":\"localidad\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"México\\\"'\"},{\"name\":\"colonia\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"Santa Ines\\\"'\"},{\"name\":\"pais\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"Mexico\\\"'\"}]},\"doc\":\"Type inferred from '{\\\"noExterior\\\":\\\"6 BIS\\\",\\\"estado\\\":\\\"D.F.\\\",\\\"codigoPostal\\\":\\\"02140\\\",\\\"municipio\\\":\\\"Azcapotzalco\\\",\\\"calle\\\":\\\"AURORA\\\",\\\"localidad\\\":\\\"México\\\",\\\"colonia\\\":\\\"Santa Ines\\\",\\\"pais\\\":\\\"Mexico\\\"}'\"},{\"name\":\"nombre\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"ALBERTO FRANCISCO PASARAN FIGUEROA\\\"'\"},{\"name\":\"rfc\",\"type\":\"string\",\"doc\":\"Type inferred from '\\\"PAFA821005IN8\\\"'\"}]},\"doc\":\"Type inferred from '{\\\"expedidoEn\\\":{\\\"noExterior\\\":\\\"6 BIS\\\",\\\"estado\\\":\\\"D.F.\\\",\\\"codigoPostal\\\":\\\"02140\\\",\\\"municipio\\\":\\\"Azcapotzalco\\\",\\\"calle\\\":\\\"AURORA\\\",\\\"colonia\\\":\\\"Santa Ines\\\",\\\"pais\\\":\\\"Mexico\\\"},\\\"regimenFiscal\\\":{\\\"Regimen\\\":\\\"Regímen de Incorporación Fiscal\\\"},\\\"domi","cilioFiscal\\\":{\\\"noExterior\\\":\\\"6 BIS\\\",\\\"estado\\\":\\\"D.F.\\\",\\\"codigoPostal\\\":\\\"02140\\\",\\\"municipio\\\":\\\"Azcapotzalco\\\",\\\"calle\\\":\\\"AURORA\\\",\\\"localidad\\\":\\\"México\\\",\\\"colonia\\\":\\\"Santa Ines\\\",\\\"pais\\\":\\\"Mexico\\\"},\\\"nombre\\\":\\\"ALBERTO FRANCISCO PASARAN FIGUEROA\\\",\\\"rfc\\\":\\\"PAFA821005IN8\\\"}'\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Type inferred from '"MXN"' */
  @Deprecated public java.lang.CharSequence moneda;
  /** Type inferred from '1227.6' */
  @Deprecated public double subTotal;
  /** Type inferred from '"Contado"' */
  @Deprecated public java.lang.CharSequence condicionesDePago;
  /** Type inferred from '1424.02' */
  @Deprecated public double total;
  /** Type inferred from '"Azcapotzalco, D.F."' */
  @Deprecated public java.lang.CharSequence lugarExpedicion;
  /** Type inferred from '{"timbreFiscalDigital":{"FechaTimbrado":"2016-07-04T10:08:28","noCertificadoSAT":"00001000000301100488","UUID":"E033B66E-34D5-4A81-835D-75562160AF38","version":1}}' */
  @Deprecated public complemento.comprobante complemento;
  /** Type inferred from '"No identificado"' */
  @Deprecated public java.lang.CharSequence metodoDePago;
  /** Type inferred from '0' */
  @Deprecated public int descuento;
  /** Type inferred from '"ingreso"' */
  @Deprecated public java.lang.CharSequence tipoDeComprobante;
  /** Type inferred from '"00001000000305104410"' */
  @Deprecated public java.lang.CharSequence noCertificado;
  /** Type inferred from '3.2' */
  @Deprecated public double version;
  /** Type inferred from '1' */
  @Deprecated public int tipoCambio;
  /** Type inferred from '"2016-07-04T10:05:41"' */
  @Deprecated public java.lang.CharSequence fecha;
  /** Type inferred from '{"domicilio":{"noExterior":139,"codigoPostal":"02760","municipio":"Azcapotzalco","calle":"SANTO DOMINGO","pais":"Mexico"},"nombre":"ANUNCIOS PREMIUM ESPECTACULARES S.A.DE C.V","rfc":"APE130206F89"}' */
  @Deprecated public receptor.comprobante receptor;
  /** Type inferred from '{"concepto":{"descripcion":"TREINTA KILOS DE SOLDADURA 7018 1/8","unidad":"SOLDADURA","cantidad":30,"complementoConcepto":"","importe":1227.6,"valorUnitario":40.92}}' */
  @Deprecated public conceptos.comprobante conceptos;
  /** Type inferred from '{"traslados":{"traslado":{"impuesto":"IVA","tasa":16,"importe":196.42}},"totalImpuestosTrasladados":196.42}' */
  @Deprecated public impuestos.comprobante impuestos;
  /** Type inferred from '"F"' */
  @Deprecated public java.lang.CharSequence serie;
  /** Type inferred from '392' */
  @Deprecated public int folio;
  /** Type inferred from '"Pago en una sola exhibición"' */
  @Deprecated public java.lang.CharSequence formaDePago;
  /** Type inferred from '{"expedidoEn":{"noExterior":"6 BIS","estado":"D.F.","codigoPostal":"02140","municipio":"Azcapotzalco","calle":"AURORA","colonia":"Santa Ines","pais":"Mexico"},"regimenFiscal":{"Regimen":"Regímen de Incorporación Fiscal"},"domicilioFiscal":{"noExterior":"6 BIS","estado":"D.F.","codigoPostal":"02140","municipio":"Azcapotzalco","calle":"AURORA","localidad":"México","colonia":"Santa Ines","pais":"Mexico"},"nombre":"ALBERTO FRANCISCO PASARAN FIGUEROA","rfc":"PAFA821005IN8"}' */
  @Deprecated public emisor.comprobante emisor;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public ComprobanteEntry() {}

  /**
   * All-args constructor.
   */
  public ComprobanteEntry(java.lang.CharSequence moneda, java.lang.Double subTotal, java.lang.CharSequence condicionesDePago, java.lang.Double total, java.lang.CharSequence lugarExpedicion, complemento.comprobante complemento, java.lang.CharSequence metodoDePago, java.lang.Integer descuento, java.lang.CharSequence tipoDeComprobante, java.lang.CharSequence noCertificado, java.lang.Double version, java.lang.Integer tipoCambio, java.lang.CharSequence fecha, receptor.comprobante receptor, conceptos.comprobante conceptos, impuestos.comprobante impuestos, java.lang.CharSequence serie, java.lang.Integer folio, java.lang.CharSequence formaDePago, emisor.comprobante emisor) {
    this.moneda = moneda;
    this.subTotal = subTotal;
    this.condicionesDePago = condicionesDePago;
    this.total = total;
    this.lugarExpedicion = lugarExpedicion;
    this.complemento = complemento;
    this.metodoDePago = metodoDePago;
    this.descuento = descuento;
    this.tipoDeComprobante = tipoDeComprobante;
    this.noCertificado = noCertificado;
    this.version = version;
    this.tipoCambio = tipoCambio;
    this.fecha = fecha;
    this.receptor = receptor;
    this.conceptos = conceptos;
    this.impuestos = impuestos;
    this.serie = serie;
    this.folio = folio;
    this.formaDePago = formaDePago;
    this.emisor = emisor;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return moneda;
    case 1: return subTotal;
    case 2: return condicionesDePago;
    case 3: return total;
    case 4: return lugarExpedicion;
    case 5: return complemento;
    case 6: return metodoDePago;
    case 7: return descuento;
    case 8: return tipoDeComprobante;
    case 9: return noCertificado;
    case 10: return version;
    case 11: return tipoCambio;
    case 12: return fecha;
    case 13: return receptor;
    case 14: return conceptos;
    case 15: return impuestos;
    case 16: return serie;
    case 17: return folio;
    case 18: return formaDePago;
    case 19: return emisor;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: moneda = (java.lang.CharSequence)value$; break;
    case 1: subTotal = (java.lang.Double)value$; break;
    case 2: condicionesDePago = (java.lang.CharSequence)value$; break;
    case 3: total = (java.lang.Double)value$; break;
    case 4: lugarExpedicion = (java.lang.CharSequence)value$; break;
    case 5: complemento = (complemento.comprobante)value$; break;
    case 6: metodoDePago = (java.lang.CharSequence)value$; break;
    case 7: descuento = (java.lang.Integer)value$; break;
    case 8: tipoDeComprobante = (java.lang.CharSequence)value$; break;
    case 9: noCertificado = (java.lang.CharSequence)value$; break;
    case 10: version = (java.lang.Double)value$; break;
    case 11: tipoCambio = (java.lang.Integer)value$; break;
    case 12: fecha = (java.lang.CharSequence)value$; break;
    case 13: receptor = (receptor.comprobante)value$; break;
    case 14: conceptos = (conceptos.comprobante)value$; break;
    case 15: impuestos = (impuestos.comprobante)value$; break;
    case 16: serie = (java.lang.CharSequence)value$; break;
    case 17: folio = (java.lang.Integer)value$; break;
    case 18: formaDePago = (java.lang.CharSequence)value$; break;
    case 19: emisor = (emisor.comprobante)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'moneda' field.
   * Type inferred from '"MXN"'   */
  public java.lang.CharSequence getMoneda() {
    return moneda;
  }

  /**
   * Sets the value of the 'moneda' field.
   * Type inferred from '"MXN"'   * @param value the value to set.
   */
  public void setMoneda(java.lang.CharSequence value) {
    this.moneda = value;
  }

  /**
   * Gets the value of the 'subTotal' field.
   * Type inferred from '1227.6'   */
  public java.lang.Double getSubTotal() {
    return subTotal;
  }

  /**
   * Sets the value of the 'subTotal' field.
   * Type inferred from '1227.6'   * @param value the value to set.
   */
  public void setSubTotal(java.lang.Double value) {
    this.subTotal = value;
  }

  /**
   * Gets the value of the 'condicionesDePago' field.
   * Type inferred from '"Contado"'   */
  public java.lang.CharSequence getCondicionesDePago() {
    return condicionesDePago;
  }

  /**
   * Sets the value of the 'condicionesDePago' field.
   * Type inferred from '"Contado"'   * @param value the value to set.
   */
  public void setCondicionesDePago(java.lang.CharSequence value) {
    this.condicionesDePago = value;
  }

  /**
   * Gets the value of the 'total' field.
   * Type inferred from '1424.02'   */
  public java.lang.Double getTotal() {
    return total;
  }

  /**
   * Sets the value of the 'total' field.
   * Type inferred from '1424.02'   * @param value the value to set.
   */
  public void setTotal(java.lang.Double value) {
    this.total = value;
  }

  /**
   * Gets the value of the 'lugarExpedicion' field.
   * Type inferred from '"Azcapotzalco, D.F."'   */
  public java.lang.CharSequence getLugarExpedicion() {
    return lugarExpedicion;
  }

  /**
   * Sets the value of the 'lugarExpedicion' field.
   * Type inferred from '"Azcapotzalco, D.F."'   * @param value the value to set.
   */
  public void setLugarExpedicion(java.lang.CharSequence value) {
    this.lugarExpedicion = value;
  }

  /**
   * Gets the value of the 'complemento' field.
   * Type inferred from '{"timbreFiscalDigital":{"FechaTimbrado":"2016-07-04T10:08:28","noCertificadoSAT":"00001000000301100488","UUID":"E033B66E-34D5-4A81-835D-75562160AF38","version":1}}'   */
  public complemento.comprobante getComplemento() {
    return complemento;
  }

  /**
   * Sets the value of the 'complemento' field.
   * Type inferred from '{"timbreFiscalDigital":{"FechaTimbrado":"2016-07-04T10:08:28","noCertificadoSAT":"00001000000301100488","UUID":"E033B66E-34D5-4A81-835D-75562160AF38","version":1}}'   * @param value the value to set.
   */
  public void setComplemento(complemento.comprobante value) {
    this.complemento = value;
  }

  /**
   * Gets the value of the 'metodoDePago' field.
   * Type inferred from '"No identificado"'   */
  public java.lang.CharSequence getMetodoDePago() {
    return metodoDePago;
  }

  /**
   * Sets the value of the 'metodoDePago' field.
   * Type inferred from '"No identificado"'   * @param value the value to set.
   */
  public void setMetodoDePago(java.lang.CharSequence value) {
    this.metodoDePago = value;
  }

  /**
   * Gets the value of the 'descuento' field.
   * Type inferred from '0'   */
  public java.lang.Integer getDescuento() {
    return descuento;
  }

  /**
   * Sets the value of the 'descuento' field.
   * Type inferred from '0'   * @param value the value to set.
   */
  public void setDescuento(java.lang.Integer value) {
    this.descuento = value;
  }

  /**
   * Gets the value of the 'tipoDeComprobante' field.
   * Type inferred from '"ingreso"'   */
  public java.lang.CharSequence getTipoDeComprobante() {
    return tipoDeComprobante;
  }

  /**
   * Sets the value of the 'tipoDeComprobante' field.
   * Type inferred from '"ingreso"'   * @param value the value to set.
   */
  public void setTipoDeComprobante(java.lang.CharSequence value) {
    this.tipoDeComprobante = value;
  }

  /**
   * Gets the value of the 'noCertificado' field.
   * Type inferred from '"00001000000305104410"'   */
  public java.lang.CharSequence getNoCertificado() {
    return noCertificado;
  }

  /**
   * Sets the value of the 'noCertificado' field.
   * Type inferred from '"00001000000305104410"'   * @param value the value to set.
   */
  public void setNoCertificado(java.lang.CharSequence value) {
    this.noCertificado = value;
  }

  /**
   * Gets the value of the 'version' field.
   * Type inferred from '3.2'   */
  public java.lang.Double getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * Type inferred from '3.2'   * @param value the value to set.
   */
  public void setVersion(java.lang.Double value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'tipoCambio' field.
   * Type inferred from '1'   */
  public java.lang.Integer getTipoCambio() {
    return tipoCambio;
  }

  /**
   * Sets the value of the 'tipoCambio' field.
   * Type inferred from '1'   * @param value the value to set.
   */
  public void setTipoCambio(java.lang.Integer value) {
    this.tipoCambio = value;
  }

  /**
   * Gets the value of the 'fecha' field.
   * Type inferred from '"2016-07-04T10:05:41"'   */
  public java.lang.CharSequence getFecha() {
    return fecha;
  }

  /**
   * Sets the value of the 'fecha' field.
   * Type inferred from '"2016-07-04T10:05:41"'   * @param value the value to set.
   */
  public void setFecha(java.lang.CharSequence value) {
    this.fecha = value;
  }

  /**
   * Gets the value of the 'receptor' field.
   * Type inferred from '{"domicilio":{"noExterior":139,"codigoPostal":"02760","municipio":"Azcapotzalco","calle":"SANTO DOMINGO","pais":"Mexico"},"nombre":"ANUNCIOS PREMIUM ESPECTACULARES S.A.DE C.V","rfc":"APE130206F89"}'   */
  public receptor.comprobante getReceptor() {
    return receptor;
  }

  /**
   * Sets the value of the 'receptor' field.
   * Type inferred from '{"domicilio":{"noExterior":139,"codigoPostal":"02760","municipio":"Azcapotzalco","calle":"SANTO DOMINGO","pais":"Mexico"},"nombre":"ANUNCIOS PREMIUM ESPECTACULARES S.A.DE C.V","rfc":"APE130206F89"}'   * @param value the value to set.
   */
  public void setReceptor(receptor.comprobante value) {
    this.receptor = value;
  }

  /**
   * Gets the value of the 'conceptos' field.
   * Type inferred from '{"concepto":{"descripcion":"TREINTA KILOS DE SOLDADURA 7018 1/8","unidad":"SOLDADURA","cantidad":30,"complementoConcepto":"","importe":1227.6,"valorUnitario":40.92}}'   */
  public conceptos.comprobante getConceptos() {
    return conceptos;
  }

  /**
   * Sets the value of the 'conceptos' field.
   * Type inferred from '{"concepto":{"descripcion":"TREINTA KILOS DE SOLDADURA 7018 1/8","unidad":"SOLDADURA","cantidad":30,"complementoConcepto":"","importe":1227.6,"valorUnitario":40.92}}'   * @param value the value to set.
   */
  public void setConceptos(conceptos.comprobante value) {
    this.conceptos = value;
  }

  /**
   * Gets the value of the 'impuestos' field.
   * Type inferred from '{"traslados":{"traslado":{"impuesto":"IVA","tasa":16,"importe":196.42}},"totalImpuestosTrasladados":196.42}'   */
  public impuestos.comprobante getImpuestos() {
    return impuestos;
  }

  /**
   * Sets the value of the 'impuestos' field.
   * Type inferred from '{"traslados":{"traslado":{"impuesto":"IVA","tasa":16,"importe":196.42}},"totalImpuestosTrasladados":196.42}'   * @param value the value to set.
   */
  public void setImpuestos(impuestos.comprobante value) {
    this.impuestos = value;
  }

  /**
   * Gets the value of the 'serie' field.
   * Type inferred from '"F"'   */
  public java.lang.CharSequence getSerie() {
    return serie;
  }

  /**
   * Sets the value of the 'serie' field.
   * Type inferred from '"F"'   * @param value the value to set.
   */
  public void setSerie(java.lang.CharSequence value) {
    this.serie = value;
  }

  /**
   * Gets the value of the 'folio' field.
   * Type inferred from '392'   */
  public java.lang.Integer getFolio() {
    return folio;
  }

  /**
   * Sets the value of the 'folio' field.
   * Type inferred from '392'   * @param value the value to set.
   */
  public void setFolio(java.lang.Integer value) {
    this.folio = value;
  }

  /**
   * Gets the value of the 'formaDePago' field.
   * Type inferred from '"Pago en una sola exhibición"'   */
  public java.lang.CharSequence getFormaDePago() {
    return formaDePago;
  }

  /**
   * Sets the value of the 'formaDePago' field.
   * Type inferred from '"Pago en una sola exhibición"'   * @param value the value to set.
   */
  public void setFormaDePago(java.lang.CharSequence value) {
    this.formaDePago = value;
  }

  /**
   * Gets the value of the 'emisor' field.
   * Type inferred from '{"expedidoEn":{"noExterior":"6 BIS","estado":"D.F.","codigoPostal":"02140","municipio":"Azcapotzalco","calle":"AURORA","colonia":"Santa Ines","pais":"Mexico"},"regimenFiscal":{"Regimen":"Regímen de Incorporación Fiscal"},"domicilioFiscal":{"noExterior":"6 BIS","estado":"D.F.","codigoPostal":"02140","municipio":"Azcapotzalco","calle":"AURORA","localidad":"México","colonia":"Santa Ines","pais":"Mexico"},"nombre":"ALBERTO FRANCISCO PASARAN FIGUEROA","rfc":"PAFA821005IN8"}'   */
  public emisor.comprobante getEmisor() {
    return emisor;
  }

  /**
   * Sets the value of the 'emisor' field.
   * Type inferred from '{"expedidoEn":{"noExterior":"6 BIS","estado":"D.F.","codigoPostal":"02140","municipio":"Azcapotzalco","calle":"AURORA","colonia":"Santa Ines","pais":"Mexico"},"regimenFiscal":{"Regimen":"Regímen de Incorporación Fiscal"},"domicilioFiscal":{"noExterior":"6 BIS","estado":"D.F.","codigoPostal":"02140","municipio":"Azcapotzalco","calle":"AURORA","localidad":"México","colonia":"Santa Ines","pais":"Mexico"},"nombre":"ALBERTO FRANCISCO PASARAN FIGUEROA","rfc":"PAFA821005IN8"}'   * @param value the value to set.
   */
  public void setEmisor(emisor.comprobante value) {
    this.emisor = value;
  }

  /** Creates a new ComprobanteEntry RecordBuilder */
  public static com.praxis.maki.model.ComprobanteEntry.Builder newBuilder() {
    return new com.praxis.maki.model.ComprobanteEntry.Builder();
  }
  
  /** Creates a new ComprobanteEntry RecordBuilder by copying an existing Builder */
  public static com.praxis.maki.model.ComprobanteEntry.Builder newBuilder(com.praxis.maki.model.ComprobanteEntry.Builder other) {
    return new com.praxis.maki.model.ComprobanteEntry.Builder(other);
  }
  
  /** Creates a new ComprobanteEntry RecordBuilder by copying an existing ComprobanteEntry instance */
  public static com.praxis.maki.model.ComprobanteEntry.Builder newBuilder(com.praxis.maki.model.ComprobanteEntry other) {
    return new com.praxis.maki.model.ComprobanteEntry.Builder(other);
  }
  
  /**
   * RecordBuilder for ComprobanteEntry instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ComprobanteEntry>
    implements org.apache.avro.data.RecordBuilder<ComprobanteEntry> {

    private java.lang.CharSequence moneda;
    private double subTotal;
    private java.lang.CharSequence condicionesDePago;
    private double total;
    private java.lang.CharSequence lugarExpedicion;
    private complemento.comprobante complemento;
    private java.lang.CharSequence metodoDePago;
    private int descuento;
    private java.lang.CharSequence tipoDeComprobante;
    private java.lang.CharSequence noCertificado;
    private double version;
    private int tipoCambio;
    private java.lang.CharSequence fecha;
    private receptor.comprobante receptor;
    private conceptos.comprobante conceptos;
    private impuestos.comprobante impuestos;
    private java.lang.CharSequence serie;
    private int folio;
    private java.lang.CharSequence formaDePago;
    private emisor.comprobante emisor;

    /** Creates a new Builder */
    private Builder() {
      super(com.praxis.maki.model.ComprobanteEntry.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.praxis.maki.model.ComprobanteEntry.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.moneda)) {
        this.moneda = data().deepCopy(fields()[0].schema(), other.moneda);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.subTotal)) {
        this.subTotal = data().deepCopy(fields()[1].schema(), other.subTotal);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.condicionesDePago)) {
        this.condicionesDePago = data().deepCopy(fields()[2].schema(), other.condicionesDePago);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.total)) {
        this.total = data().deepCopy(fields()[3].schema(), other.total);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.lugarExpedicion)) {
        this.lugarExpedicion = data().deepCopy(fields()[4].schema(), other.lugarExpedicion);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.complemento)) {
        this.complemento = data().deepCopy(fields()[5].schema(), other.complemento);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.metodoDePago)) {
        this.metodoDePago = data().deepCopy(fields()[6].schema(), other.metodoDePago);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.descuento)) {
        this.descuento = data().deepCopy(fields()[7].schema(), other.descuento);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.tipoDeComprobante)) {
        this.tipoDeComprobante = data().deepCopy(fields()[8].schema(), other.tipoDeComprobante);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.noCertificado)) {
        this.noCertificado = data().deepCopy(fields()[9].schema(), other.noCertificado);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.version)) {
        this.version = data().deepCopy(fields()[10].schema(), other.version);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.tipoCambio)) {
        this.tipoCambio = data().deepCopy(fields()[11].schema(), other.tipoCambio);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.fecha)) {
        this.fecha = data().deepCopy(fields()[12].schema(), other.fecha);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.receptor)) {
        this.receptor = data().deepCopy(fields()[13].schema(), other.receptor);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.conceptos)) {
        this.conceptos = data().deepCopy(fields()[14].schema(), other.conceptos);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.impuestos)) {
        this.impuestos = data().deepCopy(fields()[15].schema(), other.impuestos);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.serie)) {
        this.serie = data().deepCopy(fields()[16].schema(), other.serie);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.folio)) {
        this.folio = data().deepCopy(fields()[17].schema(), other.folio);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.formaDePago)) {
        this.formaDePago = data().deepCopy(fields()[18].schema(), other.formaDePago);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.emisor)) {
        this.emisor = data().deepCopy(fields()[19].schema(), other.emisor);
        fieldSetFlags()[19] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ComprobanteEntry instance */
    private Builder(com.praxis.maki.model.ComprobanteEntry other) {
            super(com.praxis.maki.model.ComprobanteEntry.SCHEMA$);
      if (isValidValue(fields()[0], other.moneda)) {
        this.moneda = data().deepCopy(fields()[0].schema(), other.moneda);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.subTotal)) {
        this.subTotal = data().deepCopy(fields()[1].schema(), other.subTotal);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.condicionesDePago)) {
        this.condicionesDePago = data().deepCopy(fields()[2].schema(), other.condicionesDePago);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.total)) {
        this.total = data().deepCopy(fields()[3].schema(), other.total);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.lugarExpedicion)) {
        this.lugarExpedicion = data().deepCopy(fields()[4].schema(), other.lugarExpedicion);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.complemento)) {
        this.complemento = data().deepCopy(fields()[5].schema(), other.complemento);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.metodoDePago)) {
        this.metodoDePago = data().deepCopy(fields()[6].schema(), other.metodoDePago);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.descuento)) {
        this.descuento = data().deepCopy(fields()[7].schema(), other.descuento);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.tipoDeComprobante)) {
        this.tipoDeComprobante = data().deepCopy(fields()[8].schema(), other.tipoDeComprobante);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.noCertificado)) {
        this.noCertificado = data().deepCopy(fields()[9].schema(), other.noCertificado);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.version)) {
        this.version = data().deepCopy(fields()[10].schema(), other.version);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.tipoCambio)) {
        this.tipoCambio = data().deepCopy(fields()[11].schema(), other.tipoCambio);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.fecha)) {
        this.fecha = data().deepCopy(fields()[12].schema(), other.fecha);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.receptor)) {
        this.receptor = data().deepCopy(fields()[13].schema(), other.receptor);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.conceptos)) {
        this.conceptos = data().deepCopy(fields()[14].schema(), other.conceptos);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.impuestos)) {
        this.impuestos = data().deepCopy(fields()[15].schema(), other.impuestos);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.serie)) {
        this.serie = data().deepCopy(fields()[16].schema(), other.serie);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.folio)) {
        this.folio = data().deepCopy(fields()[17].schema(), other.folio);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.formaDePago)) {
        this.formaDePago = data().deepCopy(fields()[18].schema(), other.formaDePago);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.emisor)) {
        this.emisor = data().deepCopy(fields()[19].schema(), other.emisor);
        fieldSetFlags()[19] = true;
      }
    }

    /** Gets the value of the 'moneda' field */
    public java.lang.CharSequence getMoneda() {
      return moneda;
    }
    
    /** Sets the value of the 'moneda' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setMoneda(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.moneda = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'moneda' field has been set */
    public boolean hasMoneda() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'moneda' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearMoneda() {
      moneda = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'subTotal' field */
    public java.lang.Double getSubTotal() {
      return subTotal;
    }
    
    /** Sets the value of the 'subTotal' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setSubTotal(double value) {
      validate(fields()[1], value);
      this.subTotal = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'subTotal' field has been set */
    public boolean hasSubTotal() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'subTotal' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearSubTotal() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'condicionesDePago' field */
    public java.lang.CharSequence getCondicionesDePago() {
      return condicionesDePago;
    }
    
    /** Sets the value of the 'condicionesDePago' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setCondicionesDePago(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.condicionesDePago = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'condicionesDePago' field has been set */
    public boolean hasCondicionesDePago() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'condicionesDePago' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearCondicionesDePago() {
      condicionesDePago = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'total' field */
    public java.lang.Double getTotal() {
      return total;
    }
    
    /** Sets the value of the 'total' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setTotal(double value) {
      validate(fields()[3], value);
      this.total = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'total' field has been set */
    public boolean hasTotal() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'total' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearTotal() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'lugarExpedicion' field */
    public java.lang.CharSequence getLugarExpedicion() {
      return lugarExpedicion;
    }
    
    /** Sets the value of the 'lugarExpedicion' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setLugarExpedicion(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.lugarExpedicion = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'lugarExpedicion' field has been set */
    public boolean hasLugarExpedicion() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'lugarExpedicion' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearLugarExpedicion() {
      lugarExpedicion = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'complemento' field */
    public complemento.comprobante getComplemento() {
      return complemento;
    }
    
    /** Sets the value of the 'complemento' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setComplemento(complemento.comprobante value) {
      validate(fields()[5], value);
      this.complemento = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'complemento' field has been set */
    public boolean hasComplemento() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'complemento' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearComplemento() {
      complemento = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'metodoDePago' field */
    public java.lang.CharSequence getMetodoDePago() {
      return metodoDePago;
    }
    
    /** Sets the value of the 'metodoDePago' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setMetodoDePago(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.metodoDePago = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'metodoDePago' field has been set */
    public boolean hasMetodoDePago() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'metodoDePago' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearMetodoDePago() {
      metodoDePago = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'descuento' field */
    public java.lang.Integer getDescuento() {
      return descuento;
    }
    
    /** Sets the value of the 'descuento' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setDescuento(int value) {
      validate(fields()[7], value);
      this.descuento = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'descuento' field has been set */
    public boolean hasDescuento() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'descuento' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearDescuento() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'tipoDeComprobante' field */
    public java.lang.CharSequence getTipoDeComprobante() {
      return tipoDeComprobante;
    }
    
    /** Sets the value of the 'tipoDeComprobante' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setTipoDeComprobante(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.tipoDeComprobante = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'tipoDeComprobante' field has been set */
    public boolean hasTipoDeComprobante() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'tipoDeComprobante' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearTipoDeComprobante() {
      tipoDeComprobante = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'noCertificado' field */
    public java.lang.CharSequence getNoCertificado() {
      return noCertificado;
    }
    
    /** Sets the value of the 'noCertificado' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setNoCertificado(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.noCertificado = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'noCertificado' field has been set */
    public boolean hasNoCertificado() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'noCertificado' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearNoCertificado() {
      noCertificado = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'version' field */
    public java.lang.Double getVersion() {
      return version;
    }
    
    /** Sets the value of the 'version' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setVersion(double value) {
      validate(fields()[10], value);
      this.version = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'version' field has been set */
    public boolean hasVersion() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'version' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearVersion() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'tipoCambio' field */
    public java.lang.Integer getTipoCambio() {
      return tipoCambio;
    }
    
    /** Sets the value of the 'tipoCambio' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setTipoCambio(int value) {
      validate(fields()[11], value);
      this.tipoCambio = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'tipoCambio' field has been set */
    public boolean hasTipoCambio() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'tipoCambio' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearTipoCambio() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'fecha' field */
    public java.lang.CharSequence getFecha() {
      return fecha;
    }
    
    /** Sets the value of the 'fecha' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setFecha(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.fecha = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'fecha' field has been set */
    public boolean hasFecha() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'fecha' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearFecha() {
      fecha = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'receptor' field */
    public receptor.comprobante getReceptor() {
      return receptor;
    }
    
    /** Sets the value of the 'receptor' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setReceptor(receptor.comprobante value) {
      validate(fields()[13], value);
      this.receptor = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'receptor' field has been set */
    public boolean hasReceptor() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'receptor' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearReceptor() {
      receptor = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'conceptos' field */
    public conceptos.comprobante getConceptos() {
      return conceptos;
    }
    
    /** Sets the value of the 'conceptos' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setConceptos(conceptos.comprobante value) {
      validate(fields()[14], value);
      this.conceptos = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'conceptos' field has been set */
    public boolean hasConceptos() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'conceptos' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearConceptos() {
      conceptos = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'impuestos' field */
    public impuestos.comprobante getImpuestos() {
      return impuestos;
    }
    
    /** Sets the value of the 'impuestos' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setImpuestos(impuestos.comprobante value) {
      validate(fields()[15], value);
      this.impuestos = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'impuestos' field has been set */
    public boolean hasImpuestos() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'impuestos' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearImpuestos() {
      impuestos = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'serie' field */
    public java.lang.CharSequence getSerie() {
      return serie;
    }
    
    /** Sets the value of the 'serie' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setSerie(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.serie = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'serie' field has been set */
    public boolean hasSerie() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'serie' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearSerie() {
      serie = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'folio' field */
    public java.lang.Integer getFolio() {
      return folio;
    }
    
    /** Sets the value of the 'folio' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setFolio(int value) {
      validate(fields()[17], value);
      this.folio = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'folio' field has been set */
    public boolean hasFolio() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'folio' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearFolio() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'formaDePago' field */
    public java.lang.CharSequence getFormaDePago() {
      return formaDePago;
    }
    
    /** Sets the value of the 'formaDePago' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setFormaDePago(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.formaDePago = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'formaDePago' field has been set */
    public boolean hasFormaDePago() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'formaDePago' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearFormaDePago() {
      formaDePago = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'emisor' field */
    public emisor.comprobante getEmisor() {
      return emisor;
    }
    
    /** Sets the value of the 'emisor' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder setEmisor(emisor.comprobante value) {
      validate(fields()[19], value);
      this.emisor = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'emisor' field has been set */
    public boolean hasEmisor() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'emisor' field */
    public com.praxis.maki.model.ComprobanteEntry.Builder clearEmisor() {
      emisor = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    @Override
    public ComprobanteEntry build() {
      try {
        ComprobanteEntry record = new ComprobanteEntry();
        record.moneda = fieldSetFlags()[0] ? this.moneda : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.subTotal = fieldSetFlags()[1] ? this.subTotal : (java.lang.Double) defaultValue(fields()[1]);
        record.condicionesDePago = fieldSetFlags()[2] ? this.condicionesDePago : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.total = fieldSetFlags()[3] ? this.total : (java.lang.Double) defaultValue(fields()[3]);
        record.lugarExpedicion = fieldSetFlags()[4] ? this.lugarExpedicion : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.complemento = fieldSetFlags()[5] ? this.complemento : (complemento.comprobante) defaultValue(fields()[5]);
        record.metodoDePago = fieldSetFlags()[6] ? this.metodoDePago : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.descuento = fieldSetFlags()[7] ? this.descuento : (java.lang.Integer) defaultValue(fields()[7]);
        record.tipoDeComprobante = fieldSetFlags()[8] ? this.tipoDeComprobante : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.noCertificado = fieldSetFlags()[9] ? this.noCertificado : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.version = fieldSetFlags()[10] ? this.version : (java.lang.Double) defaultValue(fields()[10]);
        record.tipoCambio = fieldSetFlags()[11] ? this.tipoCambio : (java.lang.Integer) defaultValue(fields()[11]);
        record.fecha = fieldSetFlags()[12] ? this.fecha : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.receptor = fieldSetFlags()[13] ? this.receptor : (receptor.comprobante) defaultValue(fields()[13]);
        record.conceptos = fieldSetFlags()[14] ? this.conceptos : (conceptos.comprobante) defaultValue(fields()[14]);
        record.impuestos = fieldSetFlags()[15] ? this.impuestos : (impuestos.comprobante) defaultValue(fields()[15]);
        record.serie = fieldSetFlags()[16] ? this.serie : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.folio = fieldSetFlags()[17] ? this.folio : (java.lang.Integer) defaultValue(fields()[17]);
        record.formaDePago = fieldSetFlags()[18] ? this.formaDePago : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.emisor = fieldSetFlags()[19] ? this.emisor : (emisor.comprobante) defaultValue(fields()[19]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
